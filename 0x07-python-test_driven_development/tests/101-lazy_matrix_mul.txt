``module lazy_matrix_mul``
=====================

>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

>>> print(lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]]))
[[ 7 10]
 [15 22]]

>>> print(lazy_matrix_mul([[1, 2]], [[3, 4], [5, 6]]))
[[13 16]]

>>> print(lazy_matrix_mul([[2, 3]], [[3, 4], [5, 6]]))
[[21 26]]

>>> print(lazy_matrix_mul([[3, 4], [5, 6]], [[2, 3]]))
Traceback (most recent call last):
...
ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 1 is different from 2)

>>> print(lazy_matrix_mul(4, [[2, 3]]))
Traceback (most recent call last):
...
ValueError: matmul: Input operand 0 does not have enough dimensions (has 0, gufunc core with signature (n?,k),(k,m?)->(n?,m?) requires 1)

>>> print(lazy_matrix_mul([[2, 3]], 2))
Traceback (most recent call last):
...
ValueError: matmul: Input operand 1 does not have enough dimensions (has 0, gufunc core with signature (n?,k),(k,m?)->(n?,m?) requires 1)

>>> print(lazy_matrix_mul([2, 3], [[1]]))
Traceback (most recent call last):
...
ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 1 is different from 2)

>>> print(lazy_matrix_mul([[2, 3]], [1]))
Traceback (most recent call last):
...
ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 1 is different from 2)

>>> print(lazy_matrix_mul([2, 3], 1))
Traceback (most recent call last):
...
ValueError: matmul: Input operand 1 does not have enough dimensions (has 0, gufunc core with signature (n?,k),(k,m?)->(n?,m?) requires 1)

>>> print(lazy_matrix_mul([], [[2, 4]]))
Traceback (most recent call last):
...
ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 1 is different from 0)

>>> print(lazy_matrix_mul([[]], [[2, 4]]))
Traceback (most recent call last):
...
ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 1 is different from 0)

>>> print(lazy_matrix_mul([[2, 3]], []))
Traceback (most recent call last):
...
ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 0 is different from 2)

>>> print(lazy_matrix_mul([[2, 3]], [[]]))
Traceback (most recent call last):
...
ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 1 is different from 2)

>>> print(lazy_matrix_mul([[2, 'fdfd']], [[2, 5]]))
Traceback (most recent call last):
...
numpy.core._exceptions._UFuncNoLoopError: ufunc 'matmul' did not contain a loop with signature matching types (dtype('<U21'), dtype('int64')) -> None

>>> print(lazy_matrix_mul([[2, 4]], [['fgf', 5]]))
Traceback (most recent call last):
...
numpy.core._exceptions._UFuncNoLoopError: ufunc 'matmul' did not contain a loop with signature matching types (dtype('int64'), dtype('<U21')) -> None

>>> print(lazy_matrix_mul([[2, 3]], [[3, 4], [5, 1, 4]]))
Traceback (most recent call last):
...
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

>>> print(lazy_matrix_mul([[2, 3], [3]], [[3, 4], [5, 1]]))
Traceback (most recent call last):
...
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

>>> print(lazy_matrix_mul())
Traceback (most recent call last):
...
TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

>>> print(lazy_matrix_mul([2, 3]))
Traceback (most recent call last):
...
TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'